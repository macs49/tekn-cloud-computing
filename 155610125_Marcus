Apa perbedaan antara IaaS, SaaS, dan Paas?
Mari saya tunjukkan perbedaan antara IaaS, PaaS, dan SaaS dengan cara yang mudah dan dengan kata-kata sederhana:

SaaS: Perangkat Lunak sebagai Layanan Ini berarti menjalankan aplikasi di cloud publik. 
Pengguna menggunakan aplikasi ini melalui Internet. 
Aplikasi ini dikelola oleh Penyedia Layanan. Beberapa mis., Penyedia Layanan, adalah SalesForce, 
Microsoft (Office 365), Oracle, Google (Google Apps), dll.
Salesforce adalah perusahaan pertama yang mengubah dunia Saas, dan sejak saat itu, 
perusahaan lain telah melihat potensi di pasar ini dan meluncurkan aplikasi mereka.

Iaas: Infrastruktur sebagai Layanan Ini memberikan lingkungan bagi pengembang untuk membangun aplikasi yang dapat digunakan pengguna. 
IaaS meliputi:-
Pengguna membuat mesin virtual (VM) sesuai permintaan.
Dari perpustakaan gambar VM.
Amazon (AWS) adalah vendor terkemuka dalam menyediakan IaaS.

PaaS: Platform sebagai Layanan Ini agak mirip dengan IaaS tetapi perbedaannya adalah:
Pengembang menyediakan aplikasi yang dijalankan platform.
Mereka tidak secara langsung membuat VM.
Anda akan berpikir bahwa PaaS sederhana dan itulah sebabnya banyak digunakan. Tetapi ini tidak benar. IaaS adalah 10 kali populer dari PaaS.
Pengembang ingin memiliki kontrol lebih besar atas sumber daya.

Arsitektur Platform SAAS (Perangkat Lunak sebagai Layanan)
Perangkat lunak sebagai layanan adalah model lisensi dan pengiriman perangkat lunak di mana perangkat lunak dilisensikan berdasarkan 
berlangganan dan di-host secara terpusat. Pengguna dapat mengaksesnya dengan bantuan browser web.
Arsitektur SAAS:
Dengan model ini, satu versi aplikasi, dengan satu konfigurasi digunakan untuk semua pelanggan.
Aplikasi ini diinstal pada banyak mesin untuk mendukung skalabilitas (disebut penskalaan horizontal). 
Dalam beberapa kasus, versi kedua aplikasi diatur untuk menawarkan kelompok pelanggan tertentu dengan akses ke versi pra-rilis aplikasi 
untuk tujuan pengujian. Dalam model tradisional ini, setiap versi aplikasi didasarkan pada kode unik. Meskipun pengecualian, 
beberapa solusi SaaS tidak menggunakan multitenancy, untuk mengelola secara efektif sejumlah besar pelanggan di tempat. 
Apakah multitenancy merupakan komponen yang diperlukan untuk perangkat lunak-sebagai-layanan adalah topik kontroversi.

Ada dua varietas utama SaaS:
SaaS Vertikal
Perangkat Lunak yang menjawab kebutuhan industri tertentu (mis., Perangkat lunak untuk kesehatan, pertanian, real estat, industri 
keuangan)
SaaS Horisontal
Produk-produk yang berfokus pada kategori perangkat lunak (pemasaran, penjualan, alat pengembang, SDM) tetapi agnostik industri.
Platform SaaS memiliki beragam kemampuan. Terutama ketika digabungkan dengan penawaran cloud lainnya seperti IaaS
(Infrastructure as a Service) dan PaaS (Platform as a Service).

Teknologi cloud seperti Microsoft Azure memungkinkan Anda menyediakan server yang dapat meng-host situs web, database, dan banyak lagi.
Infrastruktur yang secara historis akan secara fisik dipasang di lokasi bisnis dan dijalankan oleh tim TI internal, 
sekarang dapat disediakan dari dasbor online hanya dengan beberapa klik mouse.

Solusi SaaS dapat digunakan untuk lingkungan ini dan, secara teori, menawarkan semua jenis layanan yang dapat dikembangkan sebagai 
aplikasi perangkat lunak yang dapat mencakup, tetapi tidak terbatas pada:

Aplikasi kantor
Email dan pesan instan
Media sosial
Mengekspos API Pihak Ketiga
Keamanan dan otentikasi
Pembelajaran mesin
Kecerdasan buatan
Layanan Lokasi
Streaming data dan layanan pencarian
MongoDB - database untuk aplikasi web Anda?
Kami - di Usersnap - berakhir menggunakan MongoDB sebagai basis data kami sebelumnya.

Mengapa kami memilih MongoDB? Karena MongoDB adalah database berorientasi dokumen yang memberikan kinerja tinggi, ketersediaan tinggi, 
dan skalabilitas mudah. Ya. Selain kinerja (yang menginginkan database yang lambat?), 
Skalabilitas adalah faktor terpenting bagi kami sebagai bisnis SaaS global.
Banyak pendiri SaaS bertujuan untuk meningkatkan skala bisnis mereka. Selain mengubah skala produk Anda dari perspektif bisnis, 
Anda tidak boleh melupakan masalah teknis.
Menskalakan teknologi Anda dengan MongoDB cukup mudah (ok, setidaknya lebih mudah dibandingkan dengan database lain). 
Dengan sharding otomatis, Anda dapat mendistribusikan data di berbagai mesin.
Sharding adalah metode untuk menyimpan data Anda di beberapa mesin. 
Dan MongoDB menggunakan sharding untuk mendukung penyebaran dengan dataset besar.
